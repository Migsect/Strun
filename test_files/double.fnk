
type_test : {
  type: "test";
  %binding_1 : "This is a type binding";
};

type_test.binding_1.println();

not_type_test : {
  type: "test";
};
not_type_test.binding_1.println();

Coord : {
  typing : { 
    type : "coord";
    %message : "I am me the type";
    %self : {() -> ^@;};
    %str : {() -> "(".con(^@.x.str().con(", ").con(^@.y.str()).con(")"));};
    %add : {(other) -> Coord(^@.x.add(other.x),^@.y.add(other.y));};
  };
  (x, y) -> {
    type : "coord";
    message : "Will be shown";
    x : x;
    y : y;
  };
};

a : Coord(10,20);
a.x.str().println();
a.y.str().println();
a.str().println();

b : Coord(1,2);
b.str().println();

a.add(b).str().println();

#a.message.println();
#a.self().message.println();
#a.self().x.str().println();

"1====================================================".println();
A : {
  type : "a";
  %a : "foo";
  %f : {() -> ^@.a.println();};
};
"2====================================================".println();

a : {
  type : "a";
  a : "bar";
  %g : {
    () -> ^@.a.println();
  };
};
"3====================================================".println();

a.a.println();
"4====================================================".println();
a.f();
a.g();