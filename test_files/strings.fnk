"STRING TEST!!!".println();
"Colon : Test!".println();

a : ":::::::";
a.println();

count_str : {
  (n) ?(n.lssr(1))-> n.str();
  (n)             -> n.str().con(count_str(n.add(-1)));
};
count_str_print : {
  (n) -> count_str(n).println();
};

for : {
  (n, f) ?(n.lssr(1))-> f(n); 
  (n, f)             -> {f(n); for(n.add(-1),f)}; 
};

for(125, count_str_print);

A : {
  foo : 10;
  bar : 15;
  a : {
    h : foo;
    j : bar.add(foo);
  };
};

Coord : {
  type : "coord";
  $add : {
    (other) -> Coord(^@.x_pos.add(other.x_pos), ^@.y_pos.add(other.y_pos));
  };
  (x, y) -> {
    type : "coord";
    x_pos : x;
    y_pos : y;
  };
};

c1 : Coord(4,5);
c2 : Coord(7,8);
c3 : c1.add(c2);