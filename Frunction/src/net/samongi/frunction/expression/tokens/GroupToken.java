package net.samongi.frunction.expression.tokens;

import java.util.ArrayList;
import java.util.List;

import net.samongi.frunction.parse.ParseUtil;

/**The main building block of tokens
 * This contains a list of tokens and will construct it's own list based on its source.
 *
 */
public class GroupToken implements Token
{
	private final String source;
	private List<Token> tokens = null;
	
	GroupToken(String source)
	{
		this.source = source;
	}
	
	public void evaluate()
	{
		if(this.tokens != null) return;
		this.tokens = new ArrayList<>();
		
		boolean do_parse = true;
		int i = 0;
	  while(do_parse)
		{
	  	// Creating accessor tokens
			if(ParseUtil.matchesAt(source, i, AccessorToken.OPERATOR))
			{
				tokens.add(new AccessorToken());
				i += AccessorToken.OPERATOR.length();
			}
			// Creating input tokens
			if(ParseUtil.matchesAt(source, i, "("))
			{
				
			}
		}
	}
	
	/**Returns an array of tokens that is generated by this GroupToken
	 * 
	 * @return An array of tokens contained within this group token.
	 */
	public Token[] getTokens()
	{
		if(this.tokens == null) this.evaluate();
		return this.tokens.toArray(new Token[this.tokens.size()]);
	}
	
	@Override public String getSource(){return this.source;}
	
}
